<?php

class DefaultContr extends DefaultModel{

    public function dateToTime($mydate)
    {
        return parent::dateToTime($mydate);
    }

    public function updateStudentProfile($name, $surname, $secondName, $studentID, $nationalID, $sex, $country, $phone, $email, $address, $dob, $userID)
    {
        parent::updateStudentProfile($name, $surname, $secondName, $studentID, $nationalID, $sex, $country, $phone, $email, $address, $dob, $userID);
    }

    protected function createIndexAcc($userID, $name, $surname, $nationalID, $userRole, $secondName, $phone, $email, $loginID, $passwordRaw)
    {
        parent::createIndexAcc($userID, $name, $surname, $nationalID, $userRole, $secondName, $phone, $email, $loginID, $passwordRaw);
    }

    public function updateisStillStudent($isStillStudent, $userID)
    {
        parent::updateisStillStudent($isStillStudent, $userID);
    }

    public function GetWebDetails()
    {
        return parent::GetWebDetails();
    }


    public function opps()
    {
        parent::opps();
    }



    public function timeAgo($mydate)
    {
        return parent::timeAgo($mydate);
    }

    public function timeTogo($mydate)
    {
        return parent::timeTogo($mydate);
    }

    public function dateToMonth($mydate)
    {
        return parent::dateToMonth($mydate);
    }

    public function dateToMonthYear($mydate)
    {
        return parent::dateToMonthYear($mydate);
    }

    public function dateToDay($myDate)
    {
        return parent::dateToDay($myDate);
    }

    public function dateTimeToDay($mydate)
    {
        return parent::dateTimeToDay($mydate); // TODO: Change the autogenerated stub
    }

    public function isUser($id, $role)
    {
        return parent::isUser($id, $role);
    }



    public function GetUserByID($id){
        return parent::GetUserByID($id);
    }

    public function delAvatar($role, $id){
        parent::delAvatar($role, $id);
    }

    public function updateAvatar($file_tmp, $file_destination, $file_name_new, $file_ext, $role, $id){
        parent::updateAvatar($file_tmp, $file_destination, $file_name_new, $file_ext, $role, $id);
    }

    public function addUser($nationalID, $name, $surname, $loginID, $userRole, $activeStatus, $secondName, $sex, $country, $phone, $email, $address, $dob, $passwordRaw){
        parent::addUser($nationalID, $name, $surname, $loginID, $userRole, $activeStatus, $secondName, $sex, $country, $phone, $email, $address, $dob, $passwordRaw);
    }

    public function updatePassword($op, $cp, $id){
        parent::updatePassword($op, $cp, $id);
    }

    public function updateProfile($name, $surname, $sex, $email, $phone, $address, $loginID, $id){
        parent::updateProfile($name, $surname, $sex, $email, $phone, $address, $loginID, $id);
    }

    public function updateUserStatus($status, $userID){
        parent::updateUserStatus($status, $userID);
    }

    public function delUser($userID){
        parent::delUser($userID);
    }

    public function resetUserPassword($id){
        parent::resetUserPassword($id);
    }

}